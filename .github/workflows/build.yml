name: Build
on:
  push:
    branches:
      - main
      - "*"
  pull_request:
    types: [ opened, synchronize, reopened ]
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    env:
      BUILD_WRAPPER_OUT_DIR: build_wrapper_output_directory # Directory where build-wrapper output will be placed
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis
          submodules: recursive
      - name: Install sonar-scanner and build-wrapper
        uses: SonarSource/sonarcloud-github-c-cpp@v2
      - name: Install Python and Conan
        run: |
          sudo apt-get update
          sudo apt-get -y install python3 python3-pip
          pip3 install conan
      - name: Install lcov & gcovr
        run: |
          sudo apt-get -y install lcov
          sudo apt-get -y install gcovr
      - name: Setup Conan profileson
        run: |
          conan profile detect --force
          conan remote add cimmeria https://conan.rmontanana.es/artifactory/api/conan/Cimmeria
      - name: Install dependencies with Conan
        run: |
          conan install . --build=missing -of build_debug -s build_type=Debug -o enable_testing=True
      - name: Configure with CMake
        run: |
          cmake -S . -B build_debug -DCMAKE_TOOLCHAIN_FILE=build_debug/build/Debug/generators/conan_toolchain.cmake -DCMAKE_BUILD_TYPE=Debug -DENABLE_TESTING=ON
      - name: Tests & build-wrapper
        run: |
          build-wrapper-linux-x86-64 --out-dir ${{ env.BUILD_WRAPPER_OUT_DIR }} cmake --build build_debug --config Debug -j 4
          cp -r tests/datasets build_debug/tests/datasets
          cd build_debug/tests
          ctest --output-on-failure -j 4
          lcov --capture --directory ../ --demangle-cpp --ignore-errors source,source --ignore-errors mismatch --ignore-errors inconsistent --output-file coverage.info --ignore-errors gcov >/dev/null 2>&1
          lcov --remove coverage.info '/usr/*' --output-file coverage.info >/dev/null 2>&1
          lcov --remove coverage.info 'lib/*' --output-file coverage.info >/dev/null 2>&1
          lcov --remove coverage.info 'libtorch/*' --output-file coverage.info --ignore-errors unused >/dev/null 2>&1
          lcov --remove coverage.info 'tests/*' --output-file coverage.info >/dev/null 2>&1
          lcov --remove coverage.info 'gtest/*' --output-file coverage.info >/dev/null 2>&1
          lcov --remove coverage.info '*/.conan2/*' --ignore-errors unused --output-file coverage.info >/dev/null 2>&1
          genhtml coverage.info --demangle-cpp --output-directory coverage --title "Discretizer mdlp Coverage Report" -s -k -f --legend
          gcovr -r ../../ -f ../src/CPPFImdlp.cpp -f ../src/Metrics.cpp -f ../src/BinDisc.cpp -f ../src/Discretizer.cpp --sonarqube=coverage.xml
      - name: Run sonar-scanner
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          sonar-scanner --define sonar.cfamily.compile-commands="${{ env.BUILD_WRAPPER_OUT_DIR }}" \
                        --define sonar.coverageReportPaths=build_debug/tests/coverage.xml